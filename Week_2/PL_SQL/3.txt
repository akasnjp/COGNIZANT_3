DECLARE
    -- Exception declarations
    insufficient_funds EXCEPTION;

    -- Variables for transfer funds procedure
    v_balance_from NUMBER;

    -- Variables for update salary procedure
    v_salary employees.salary%TYPE;

BEGIN
    -- Procedure 1: ProcessMonthlyInterest
    DECLARE
        v_interest_rate CONSTANT NUMBER := 0.01; -- 1% interest rate
    BEGIN
        -- Update the balance of all savings accounts
        UPDATE accounts
        SET balance = balance + (balance * v_interest_rate)
        WHERE account_type = 'SAVINGS';

        -- Commit the transaction
        COMMIT;

        DBMS_OUTPUT.PUT_LINE('Monthly interest processed for all savings accounts.');
    EXCEPTION
        WHEN OTHERS THEN
            ROLLBACK;
            DBMS_OUTPUT.PUT_LINE('Error: An unexpected error occurred while processing monthly interest.');
    END;

    -- Procedure 2: UpdateEmployeeBonus
    DECLARE
        p_department_id NUMBER := 1; -- Example value
        p_bonus_percentage NUMBER := 10; -- Example value
    BEGIN
        -- Update the salary of employees in the given department
        UPDATE employees
        SET salary = salary + (salary * p_bonus_percentage / 100)
        WHERE department_id = p_department_id;

        -- Commit the transaction
        COMMIT;

        DBMS_OUTPUT.PUT_LINE('Bonus updated for employees in department ID: ' || p_department_id);
    EXCEPTION
        WHEN OTHERS THEN
            ROLLBACK;
            DBMS_OUTPUT.PUT_LINE('Error: An unexpected error occurred while updating employee bonus.');
    END;

    -- Procedure 3: TransferFunds
    DECLARE
        p_from_account_id NUMBER := 1; -- Example value
        p_to_account_id NUMBER := 2; -- Example value
        p_amount NUMBER := 500; -- Example value
    BEGIN
        -- Fetch the balance of the source account
        SELECT balance INTO v_balance_from
        FROM accounts
        WHERE account_id = p_from_account_id
        FOR UPDATE;

        -- Check if the source account has sufficient funds
        IF v_balance_from < p_amount THEN
            RAISE insufficient_funds;
        END IF;

        -- Deduct the amount from the source account
        UPDATE accounts
        SET balance = balance - p_amount
        WHERE account_id = p_from_account_id;

        -- Add the amount to the destination account
        UPDATE accounts
        SET balance = balance + p_amount
        WHERE account_id = p_to_account_id;

        -- Commit the transaction
        COMMIT;

        DBMS_OUTPUT.PUT_LINE('Funds transferred successfully from account ID ' || p_from_account_id || ' to account ID ' || p_to_account_id);

    EXCEPTION
        WHEN insufficient_funds THEN
            ROLLBACK;
            DBMS_OUTPUT.PUT_LINE('Error: Insufficient funds in the source account ID ' || p_from_account_id);
        WHEN OTHERS THEN
            ROLLBACK;
            DBMS_OUTPUT.PUT_LINE('Error: An unexpected error occurred during the funds transfer.');
    END;

END;
/